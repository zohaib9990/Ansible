---
- name: Docker build and push
  hosts: local  # Replace with the hostname or IP address of your target server
  become: yes   # Run tasks with sudo privileges

  vars:
    docker_image_name: "petstore"
    docker_repository: "rizwanshaukat/petstore:latest"
    dockerfile_path: "/var/lib/jenkins/workspace/petstore"

  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Build Docker Image
      docker_image:
        name: "{{ docker_image_name }}"
        path: "{{ dockerfile_path }}"
        state: present  # Ensure the image is built

    - name: Log in to Docker Hub
      community.docker.docker_login:
        registry_url: "https://index.docker.io/v1/"
        username: "{{ lookup('env', 'DOCKER_USERNAME') }}"
        password: "{{ lookup('env', 'DOCKER_PASSWORD') }}"

    - name: Tag Docker image
      command: docker tag {{ docker_image_name }} {{ docker_repository }}

    - name: Push Docker image to Docker Hub
      community.docker.docker_image:
        name: "{{ docker_repository }}"
        push: yes  # Push the image to the repository

    - name: Remove existing Docker container
      docker_container:
        name: "{{ docker_image_name }}"
        state: absent
      ignore_errors: yes  # Prevent playbook failure if the container doesn't exist

    - name: Run Docker container
      docker_container:
        name: "{{ docker_image_name }}"
        image: "{{ docker_repository }}"
        state: started
        restart_policy: always  # Automatically restart the container if it stops
        published_ports:
          - "8081:8080"  # Map ports
      register: run_result
      ignore_errors: yes

    - name: Log failure if the container failed to start
      debug:
        msg: "Failed to run container: {{ run_result.stderr }}"
      when: run_result.rc != 0
